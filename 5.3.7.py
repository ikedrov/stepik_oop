'''
Ваша задача  создать класс CustomButton, у которого есть:

метод __init__, принимающий один обязательный аргумент текст кнопки, его необходимо сохранить в атрибут text. И также в метод  может поступать произвольное количество именованных аргументов. Их необходимо сохранять в атрибуты экземпляра под тем же названием
метод config, который принимает произвольное количество именованных атрибутов. Он должен создать атрибут с указанным именем или, если этот атрибут уже присутствовал в экземпляре, изменить его на новое значение
метод click, который должен выполнить следующую строчку
self.command()
Здесь command является не методом, а атрибутом, который вызывают. В момент выполнения этой строчки может произойти две неприятные ситуации
атрибут command может отсутствовать у экземпляра и тогда возникнет исключение AttributeError
атрибут command может не поддерживать оператор вызова и тогда возникнет исключение TypeError
Эти ситуации вам необходимо обработать в блоке try-except.При первом варианте нужно вывести сообщение «Кнопка не настроена», при втором - «Кнопка сломалась»
'''

class CustomButton:

    def __init__(self, text, **kwargs):
        self.text = text
        for k, v in kwargs.items():
            self.__dict__[k] = v

    def config(self, **kwargs):
        self.__dict__.update(kwargs)

    def click(self):
        try:
            self.command()
        except AttributeError:
            print('Кнопка не настроена')
        except TypeError:
            print('Кнопка сломалась')

def func():
    print('Оно живое')


btn = CustomButton(text="Hello", bd=20, bg='#ffaaaa')
btn.click()  # Кнопка не настроена
btn.config(command=func)
btn.click()  # Оно живое
